{:deps    {org.clojure/clojure       {:mvn/version "1.12.0"}
           org.clojure/clojurescript {:mvn/version "1.11.132"}
           org.clojure/test.check    {:mvn/version "1.1.1"}}
 :paths   ["src"]
 :aliases {:test                     {:extra-paths ["test"]}
           :clj-runner               {:extra-deps {io.github.cognitect-labs/test-runner
                                                   {:git/tag "v0.5.1" :git/sha "dfb30dd"}}
                                      :main-opts  ["-m" "cognitect.test-runner"]
                                      :exec-fn cognitect.test-runner.api/test}
           :cljs-runner              {:extra-deps {olical/cljs-test-runner {:mvn/version "3.8.1"}}
                                      :main-opts  ["-m" "cljs-test-runner.main"
                                                   "--out" ".cljs-test-runner-out"]}
           :socket                   {:jvm-opts ["-Dclojure.server.repl={:port,5555,:accept,clojure.core.server/repl}"]}
           :clj-repl-server          {:exec-fn   clojure.core.server/start-server
                                      :exec-args {:name          "clj-repl-server"
                                                  :port          5555
                                                  :accept        clojure.core.server/repl
                                                  :server-daemon false}}
           :cljs-node-repl-server    {:exec-fn   clojure.core.server/start-server
                                      :exec-args {:name          "cljs-node-repl-server"
                                                  :port          5555
                                                  :accept        cljs.server.node/repl
                                                  :args          [{:opts     {:warn-on-undeclared false}
                                                                   :env-opts {}}]
                                                  :server-daemon false}}
           :cljs-browser-repl-server {:exec-fn   clojure.core.server/start-server
                                      :exec-args {:name          "cljs-browser-repl-server"
                                                  :port          5555
                                                  :accept        cljs.server.browser/repl
                                                  :args          [{:opts     {:warn-on-undeclared false}
                                                                   :env-opts {}}]
                                                  :server-daemon false}}}}
